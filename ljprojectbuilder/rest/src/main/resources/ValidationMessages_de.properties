javax.validation.constraints.AssertFalse.message=muss den Wert false haben
javax.validation.constraints.AssertTrue.message=muss den Wert true haben
javax.validation.constraints.DecimalMax.message=muss kleiner oder gleich {value} sein
javax.validation.constraints.DecimalMin.message=muss größer oder gleich {value} sein
javax.validation.constraints.Digits.message=die Zahlen liegen nicht im Wertebereich (<{integer} digits>.<{fraction} digits> erwartet)
javax.validation.constraints.Future.message=muss in der Zukunft liegen
javax.validation.constraints.Max.message=muss kleiner oder gleich {value} sein
javax.validation.constraints.Min.message=muss größer oder gleich {value} sein
javax.validation.constraints.NotNull.message=darf nicht null sein
javax.validation.constraints.Null.message=muss den Wert null haben
javax.validation.constraints.Past.message=muss in der Vergangenheit liegen
javax.validation.constraints.Pattern.message=Feld "{fieldname}" muss den regulären Ausdruck "{regexp}" erfüllen
javax.validation.constraints.Size.message=Die Länge muss zwischen {min} und {max} liegen
org.hibernate.validator.constraints.Email.message="{value}" ist keine gültige E-Mail-Adresse
org.hibernate.validator.constraints.Length.message=die Länge muss zwischen {min} und {max} liegen
org.hibernate.validator.constraints.NotEmpty.message=darf nicht leer sein
org.hibernate.validator.constraints.Range.message={value} muss zwischen {min} und {max} liegen
org.hibernate.validator.constraints.NotBlank.message=darf nicht leer sein